@using isriding.Web.Models.Authen
@model isriding.Web.Models.Authen.BackUserModel
@{
    ViewBag.Title = "后台管理员管理";
    var buttonList = ViewBag.ButtonList as List<PermissionButtonModel>;
}
@if (buttonList != null && buttonList.Any(t => t.Name.ToLower() == "浏览"))
{
    @Html.Partial("_Search", Model.Search)
    @Html.Partial("_List")
    @Html.Partial("Modal")

    @section scripts{
        <script>
        var oTable = null;

        $(function() {
            var actionUrl = "@Url.Action("InitDataTable")?rand=" + Math.random() + "&" + $("#search_form").serialize();
            var aoColumns = [
                { "sName": "sort" },
                { "sName": "loginname" },
                { "sName": "fullname" },
                { "sName": "phone" },
                { "sName": "email" },
                {
                    "sName": "enabled",
                    "fnRender": function (oObj) {
                        var render;
                        var t = oObj.aData[oObj.aData.length-2];
                        if (t === "1") {
                            render = '启用';
                        } else {
                            render = '禁用';
                        }

                        return render;
                    }
                },
                {
                    "sName": "action",
                    "fnRender": function(oObj) {
                        var editUrl = '@Url.Action("Edit")';
                        var deleteUrl = '@Url.Action("Delete")';

                        var render = "";
                        @if (buttonList.Any(t => t.Name.ToLower() == "编辑"))
                        {
                            <text>render += TableManaged.btnEdit(editUrl, oObj.aData[oObj.aData.length - 1]) + ' ';</text>
                        }
                        @if (buttonList.Any(t => t.Name.ToLower() == "删除"))
                        {
                            <text>render += TableManaged.btnDelete(deleteUrl, oObj.aData[oObj.aData.length - 1]);</text>
                        }
                        return render;

                        //return TableManaged.btnEdit(editUrl, oObj.aData[oObj.aData.length - 1]) + ' ' + TableManaged.btnDelete(deleteUrl, oObj.aData[oObj.aData.length - 1]);
                    }
                }
            ];
            var fnDrawCallback = function () {
                //$("[data-toggle='tooltip']").popover();
            };
            oTable = TableManaged.init($(".datatable"), actionUrl, aoColumns, fnDrawCallback);

            $('#search_form').keypress(function (e) {
                if (e.which === 13) {
                    e.preventDefault();//取消回车原事件
                    TableManaged.search('@Url.Action("InitDataTable")');
                }
            });
        });

        //新增
        function Create(actionUrl) {
            ShowModal(actionUrl, {}, "新增管理员");
        }

        //编辑
        function Edit(actionUrl, id) {
            var param = { id: id };
            ShowModal(actionUrl, param, "编辑管理员");
        }

        //保存
        function Save() {
            SaveModal(oTable);
        }
        </script>
    }
}
